// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ServiceContext))]
    [Migration("20250504224342_UpdateAskNullableFields")]
    partial class UpdateAskNullableFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Ask", b =>
                {
                    b.Property<int>("IdAsk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsk"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AskText")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdAsk");

                    b.ToTable("asks");

                    b.HasData(
                        new
                        {
                            IdAsk = 1,
                            Answer = "París",
                            AskText = "¿Cuál es la capital de Francia?",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pregunta sobre geografía europea",
                            Name = "Capital de Francia"
                        },
                        new
                        {
                            IdAsk = 2,
                            Answer = "4",
                            AskText = "¿Cuánto es 2 + 2?",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pregunta de aritmética simple",
                            Name = "Matemáticas básicas"
                        },
                        new
                        {
                            IdAsk = 3,
                            Answer = "1492",
                            AskText = "¿En qué año llegó Colón a América?",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pregunta sobre eventos históricos",
                            Name = "Historia universal"
                        });
                });

            modelBuilder.Entity("Domain.Entities.ContentType", b =>
                {
                    b.Property<int>("IdContentType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContentType"));

                    b.Property<string>("ContentTypeName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("url")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("IdContentType");

                    b.ToTable("ContentTypes");

                    b.HasData(
                        new
                        {
                            IdContentType = 1,
                            ContentTypeName = "Texto",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            url = "text-content"
                        },
                        new
                        {
                            IdContentType = 2,
                            ContentTypeName = "Imagen",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            url = "image-content"
                        },
                        new
                        {
                            IdContentType = 3,
                            ContentTypeName = "Video",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            url = "video-content"
                        },
                        new
                        {
                            IdContentType = 4,
                            ContentTypeName = "Pregunta",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            url = "question-content"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Option", b =>
                {
                    b.Property<int>("IdOption")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOption"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAsk")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdOption");

                    b.HasIndex("IdAsk");

                    b.ToTable("options");

                    b.HasData(
                        new
                        {
                            IdOption = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 1,
                            OptionText = "Madrid"
                        },
                        new
                        {
                            IdOption = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 1,
                            OptionText = "París"
                        },
                        new
                        {
                            IdOption = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 1,
                            OptionText = "Berlín"
                        },
                        new
                        {
                            IdOption = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 2,
                            OptionText = "3"
                        },
                        new
                        {
                            IdOption = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 2,
                            OptionText = "4"
                        },
                        new
                        {
                            IdOption = 6,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 2,
                            OptionText = "5"
                        },
                        new
                        {
                            IdOption = 7,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 3,
                            OptionText = "1492"
                        },
                        new
                        {
                            IdOption = 8,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 3,
                            OptionText = "1501"
                        },
                        new
                        {
                            IdOption = 9,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 3,
                            OptionText = "1600"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Presentation", b =>
                {
                    b.Property<int>("IdPresentation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPresentation"));

                    b.Property<bool>("ActivityStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid>("IdUserCreat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdPresentation");

                    b.ToTable("Presentations");
                });

            modelBuilder.Entity("Domain.Entities.Slide", b =>
                {
                    b.Property<int>("IdSlide")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSlide"));

                    b.Property<string>("BackgroundColor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdAsk")
                        .HasColumnType("int");

                    b.Property<int?>("IdContentType")
                        .HasColumnType("int");

                    b.Property<int>("IdPresentation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdSlide");

                    b.HasIndex("IdAsk");

                    b.HasIndex("IdContentType");

                    b.HasIndex("IdPresentation");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("Domain.Entities.Option", b =>
                {
                    b.HasOne("Domain.Entities.Ask", "Ask")
                        .WithMany("options")
                        .HasForeignKey("IdAsk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ask");
                });

            modelBuilder.Entity("Domain.Entities.Slide", b =>
                {
                    b.HasOne("Domain.Entities.Ask", "Ask")
                        .WithMany("slides")
                        .HasForeignKey("IdAsk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Entities.ContentType", "ContentType")
                        .WithMany("slides")
                        .HasForeignKey("IdContentType")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Entities.Presentation", "Presentation")
                        .WithMany("Slides")
                        .HasForeignKey("IdPresentation")
                        .IsRequired();

                    b.Navigation("Ask");

                    b.Navigation("ContentType");

                    b.Navigation("Presentation");
                });

            modelBuilder.Entity("Domain.Entities.Ask", b =>
                {
                    b.Navigation("options");

                    b.Navigation("slides");
                });

            modelBuilder.Entity("Domain.Entities.ContentType", b =>
                {
                    b.Navigation("slides");
                });

            modelBuilder.Entity("Domain.Entities.Presentation", b =>
                {
                    b.Navigation("Slides");
                });
#pragma warning restore 612, 618
        }
    }
}
