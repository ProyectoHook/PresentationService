// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ServiceContext))]
    [Migration("20250623130440_first_setup")]
    partial class first_setup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Ask", b =>
                {
                    b.Property<int>("IdAsk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsk"));

                    b.Property<string>("AskText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SlideId")
                        .HasColumnType("int");

                    b.HasKey("IdAsk");

                    b.HasIndex("SlideId")
                        .IsUnique();

                    b.ToTable("asks");
                });

            modelBuilder.Entity("Domain.Entities.Option", b =>
                {
                    b.Property<int>("IdOption")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOption"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAsk")
                        .HasColumnType("int");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOption");

                    b.HasIndex("IdAsk");

                    b.ToTable("options");
                });

            modelBuilder.Entity("Domain.Entities.Presentation", b =>
                {
                    b.Property<int>("IdPresentation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPresentation"));

                    b.Property<bool>("ActivityStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid>("IdUserCreat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdPresentation");

                    b.ToTable("Presentations");
                });

            modelBuilder.Entity("Domain.Entities.Slide", b =>
                {
                    b.Property<int>("IdSlide")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSlide"));

                    b.Property<string>("BackgroundColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPresentation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSlide");

                    b.HasIndex("IdPresentation");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("Domain.Entities.Ask", b =>
                {
                    b.HasOne("Domain.Entities.Slide", "Slide")
                        .WithOne("Ask")
                        .HasForeignKey("Domain.Entities.Ask", "SlideId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Slide");
                });

            modelBuilder.Entity("Domain.Entities.Option", b =>
                {
                    b.HasOne("Domain.Entities.Ask", "Ask")
                        .WithMany("Options")
                        .HasForeignKey("IdAsk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ask");
                });

            modelBuilder.Entity("Domain.Entities.Slide", b =>
                {
                    b.HasOne("Domain.Entities.Presentation", "Presentation")
                        .WithMany("Slides")
                        .HasForeignKey("IdPresentation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Presentation");
                });

            modelBuilder.Entity("Domain.Entities.Ask", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("Domain.Entities.Presentation", b =>
                {
                    b.Navigation("Slides");
                });

            modelBuilder.Entity("Domain.Entities.Slide", b =>
                {
                    b.Navigation("Ask");
                });
#pragma warning restore 612, 618
        }
    }
}
