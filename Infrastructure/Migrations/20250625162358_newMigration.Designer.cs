// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ServiceContext))]
    [Migration("20250625162358_newMigration")]
    partial class newMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContentTypeSlide", b =>
                {
                    b.Property<int>("ContentTypesIdContentType")
                        .HasColumnType("int");

                    b.Property<int>("slidesIdSlide")
                        .HasColumnType("int");

                    b.HasKey("ContentTypesIdContentType", "slidesIdSlide");

                    b.HasIndex("slidesIdSlide");

                    b.ToTable("ContentTypeSlide");
                });

            modelBuilder.Entity("Domain.Entities.Ask", b =>
                {
                    b.Property<int>("IdAsk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsk"));

                    b.Property<string>("AskText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdSlide")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAsk");

                    b.HasIndex("IdSlide")
                        .IsUnique();

                    b.ToTable("asks");

                    b.HasData(
                        new
                        {
                            IdAsk = 1,
                            AskText = "¿Cuál es la capital de Francia?",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pregunta sencilla",
                            IdSlide = 10,
                            Name = "Pregunta Slide 1"
                        },
                        new
                        {
                            IdAsk = 2,
                            AskText = "¿Cuál es el río más largo del mundo?",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pregunta sobre geografía",
                            IdSlide = 11,
                            Name = "Pregunta Slide 2"
                        },
                        new
                        {
                            IdAsk = 3,
                            AskText = "¿Cuál es el planeta más grande del Sistema Solar?",
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pregunta general",
                            IdSlide = 12,
                            Name = "Pregunta Slide 3"
                        });
                });

            modelBuilder.Entity("Domain.Entities.ContentType", b =>
                {
                    b.Property<int>("IdContentType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContentType"));

                    b.Property<string>("ContentTypeName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdContentType");

                    b.ToTable("ContentType");

                    b.HasData(
                        new
                        {
                            IdContentType = 1,
                            ContentTypeName = "Texto"
                        },
                        new
                        {
                            IdContentType = 2,
                            ContentTypeName = "Imagen"
                        },
                        new
                        {
                            IdContentType = 4,
                            ContentTypeName = "Pregunta"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Option", b =>
                {
                    b.Property<int>("IdOption")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOption"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAsk")
                        .HasColumnType("int");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOption");

                    b.HasIndex("IdAsk");

                    b.ToTable("options");

                    b.HasData(
                        new
                        {
                            IdOption = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 1,
                            IsCorrect = true,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OptionText = "París"
                        },
                        new
                        {
                            IdOption = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 1,
                            IsCorrect = false,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OptionText = "Londres"
                        },
                        new
                        {
                            IdOption = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 1,
                            IsCorrect = false,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OptionText = "Madrid"
                        },
                        new
                        {
                            IdOption = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 2,
                            IsCorrect = false,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OptionText = "Amazonas"
                        },
                        new
                        {
                            IdOption = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 2,
                            IsCorrect = true,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OptionText = "Nilo"
                        },
                        new
                        {
                            IdOption = 6,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 2,
                            IsCorrect = false,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OptionText = "Yangtsé"
                        },
                        new
                        {
                            IdOption = 7,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 3,
                            IsCorrect = false,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OptionText = "Saturno"
                        },
                        new
                        {
                            IdOption = 8,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 3,
                            IsCorrect = true,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OptionText = "Júpiter"
                        },
                        new
                        {
                            IdOption = 9,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdAsk = 3,
                            IsCorrect = false,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OptionText = "Neptuno"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Presentation", b =>
                {
                    b.Property<int>("IdPresentation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPresentation"));

                    b.Property<bool>("ActivityStatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid>("IdUserCreat")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdPresentation");

                    b.ToTable("Presentations");

                    b.HasData(
                        new
                        {
                            IdPresentation = 1,
                            ActivityStatus = true,
                            CreatedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserCreat = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Presentacion de prueba completa"
                        },
                        new
                        {
                            IdPresentation = 2,
                            ActivityStatus = true,
                            CreatedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdUserCreat = new Guid("00000000-0000-0000-0000-000000000000"),
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Michidemo full"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Slide", b =>
                {
                    b.Property<int>("IdSlide")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSlide"));

                    b.Property<string>("BackgroundColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdContentType")
                        .HasColumnType("int");

                    b.Property<int>("IdPresentation")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSlide");

                    b.HasIndex("IdPresentation");

                    b.ToTable("Slides");

                    b.HasData(
                        new
                        {
                            IdSlide = 1,
                            BackgroundColor = "black",
                            Content = "Descripcion de imagen",
                            CreateAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdContentType = 2,
                            IdPresentation = 2,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = 1,
                            Title = "Michidemo Slides (pos 1)",
                            Url = "https://i.pinimg.com/474x/f6/c4/de/f6c4dea389511b32e9688b108e78fe4c.jpg"
                        },
                        new
                        {
                            IdSlide = 2,
                            BackgroundColor = "black",
                            CreateAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdContentType = 2,
                            IdPresentation = 2,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = 2,
                            Title = "Michidemo Slides (pos 2)",
                            Url = "https://i.pinimg.com/474x/c2/6e/9a/c26e9ad4e2125917d5965700e2a87635.jpg"
                        },
                        new
                        {
                            IdSlide = 3,
                            BackgroundColor = "black",
                            Content = "Descripcion de imagen",
                            CreateAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdContentType = 2,
                            IdPresentation = 2,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = 3,
                            Title = "Michidemo Slides (pos 3)",
                            Url = "https://i.pinimg.com/474x/34/a2/33/34a2331d5748b45f3b1ca5de1fda77a8.jpg"
                        },
                        new
                        {
                            IdSlide = 4,
                            BackgroundColor = "black",
                            CreateAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdContentType = 2,
                            IdPresentation = 2,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = 4,
                            Title = "Michidemo Slides (pos 4)",
                            Url = "https://i.pinimg.com/474x/7a/e1/cf/7ae1cfe11811aa7ae62a375d59247cd1.jpg"
                        },
                        new
                        {
                            IdSlide = 6,
                            BackgroundColor = "black",
                            Content = "Descripcion de imagen",
                            CreateAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdContentType = 2,
                            IdPresentation = 2,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = 5,
                            Title = "Michidemo Slides (pos 5)",
                            Url = "https://i.pinimg.com/474x/9c/89/66/9c8966f0b1e1062367310236244b45e9.jpg"
                        },
                        new
                        {
                            IdSlide = 5,
                            BackgroundColor = "black",
                            CreateAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdContentType = 2,
                            IdPresentation = 2,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = 6,
                            Title = "Michidemo Slides (pos 6)",
                            Url = "https://i.pinimg.com/474x/6f/ee/72/6fee72bad31ef67ddceb000a22836538.jpg"
                        },
                        new
                        {
                            IdSlide = 7,
                            BackgroundColor = "#FFFFFF",
                            Content = "Este es el texto introductorio de la presentacion",
                            CreateAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdContentType = 1,
                            IdPresentation = 1,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = 1,
                            Title = "Primer Slide (pos 1)",
                            Url = "https://ejemplo.com/slide1"
                        },
                        new
                        {
                            IdSlide = 8,
                            BackgroundColor = "#FFEEAA",
                            Content = "bla bla bla ....",
                            CreateAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdContentType = 1,
                            IdPresentation = 1,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = 2,
                            Title = "Segundo Slide (pos 2)",
                            Url = "https://ejemplo.com/slide2"
                        },
                        new
                        {
                            IdSlide = 9,
                            BackgroundColor = "#DDEEFF",
                            Content = "Fin de la presentacion. Muchas gracias.",
                            CreateAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdContentType = 1,
                            IdPresentation = 1,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = 3,
                            Title = "Tercer Slide (pos 3)",
                            Url = "https://ejemplo.com/slide3"
                        },
                        new
                        {
                            IdSlide = 10,
                            BackgroundColor = "#FFFFFF",
                            Content = "Este es el texto introductorio de la presentacion",
                            CreateAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdContentType = 1,
                            IdPresentation = 1,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = 5,
                            Title = "Pregunta 1 (pos 5)",
                            Url = "https://ejemplo.com/slide1"
                        },
                        new
                        {
                            IdSlide = 11,
                            BackgroundColor = "#FFEEAA",
                            Content = "bla bla bla ....",
                            CreateAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdContentType = 1,
                            IdPresentation = 1,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = 6,
                            Title = "Pregunta 2 (pos 6)",
                            Url = "https://ejemplo.com/slide2"
                        },
                        new
                        {
                            IdSlide = 12,
                            BackgroundColor = "#DDEEFF",
                            Content = "Fin de la presentacion. Muchas gracias.",
                            CreateAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdContentType = 1,
                            IdPresentation = 1,
                            ModifiedAt = new DateTime(2025, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = 4,
                            Title = "Pregunta 3 (pos 4)",
                            Url = "https://ejemplo.com/slide3"
                        });
                });

            modelBuilder.Entity("ContentTypeSlide", b =>
                {
                    b.HasOne("Domain.Entities.ContentType", null)
                        .WithMany()
                        .HasForeignKey("ContentTypesIdContentType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Slide", null)
                        .WithMany()
                        .HasForeignKey("slidesIdSlide")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Ask", b =>
                {
                    b.HasOne("Domain.Entities.Slide", "Slide")
                        .WithOne("Ask")
                        .HasForeignKey("Domain.Entities.Ask", "IdSlide")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Slide");
                });

            modelBuilder.Entity("Domain.Entities.Option", b =>
                {
                    b.HasOne("Domain.Entities.Ask", "Ask")
                        .WithMany("Options")
                        .HasForeignKey("IdAsk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ask");
                });

            modelBuilder.Entity("Domain.Entities.Slide", b =>
                {
                    b.HasOne("Domain.Entities.Presentation", "Presentation")
                        .WithMany("Slides")
                        .HasForeignKey("IdPresentation")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Presentation");
                });

            modelBuilder.Entity("Domain.Entities.Ask", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("Domain.Entities.Presentation", b =>
                {
                    b.Navigation("Slides");
                });

            modelBuilder.Entity("Domain.Entities.Slide", b =>
                {
                    b.Navigation("Ask");
                });
#pragma warning restore 612, 618
        }
    }
}
